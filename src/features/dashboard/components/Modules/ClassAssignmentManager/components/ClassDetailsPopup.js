import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { X, Calendar, Clock, User, IndianRupee, CheckSquare } from 'lucide-react';
import { getClientNames, getClientEmails, getBookingIds } from '../types';
import { formatDate, formatTime, getStatusStyle } from '../utils';
export const ClassDetailsPopup = ({ assignment, isVisible, onClose, onEdit }) => {
    if (!isVisible || !assignment)
        return null;
    const statusStyle = getStatusStyle(assignment);
    return (_jsxs("div", { className: "fixed inset-0 z-50 overflow-y-auto", children: [_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 transition-opacity", onClick: onClose }), _jsx("div", { className: "flex min-h-full items-center justify-center p-4", children: _jsxs("div", { className: "relative bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto", children: [_jsxs("div", { className: "flex items-center justify-between p-6 border-b border-gray-200", children: [_jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Class Details" }), _jsx("button", { onClick: onClose, className: "text-gray-400 hover:text-gray-600 transition-colors", children: _jsx(X, { className: "w-6 h-6" }) })] }), _jsxs("div", { className: "p-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Class Type" }), _jsx("p", { className: "text-lg font-semibold text-gray-900", children: assignment.class_type?.name || 'N/A' }), assignment.class_type?.difficulty_level && (_jsxs("p", { className: "text-sm text-gray-600", children: ["Difficulty: ", assignment.class_type.difficulty_level] }))] }), _jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Instructor" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(User, { className: "w-4 h-4 text-gray-400" }), _jsx("p", { className: "text-gray-900", children: assignment.instructor_profile?.full_name || 'N/A' })] }), assignment.instructor_profile?.email && (_jsx("p", { className: "text-sm text-gray-600 ml-6", children: assignment.instructor_profile.email }))] }), getClientNames(assignment) && (_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Client Information" }), _jsx("p", { className: "text-gray-900", children: getClientNames(assignment) }), getClientEmails(assignment) && (_jsx("p", { className: "text-sm text-gray-600", children: getClientEmails(assignment) }))] }))] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Schedule" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Calendar, { className: "w-4 h-4 text-gray-400" }), _jsx("p", { className: "text-gray-900", children: formatDate(assignment.date) })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Clock, { className: "w-4 h-4 text-gray-400" }), _jsxs("p", { className: "text-gray-900", children: [formatTime(assignment.start_time), " - ", formatTime(assignment.end_time)] })] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Status" }), _jsxs("div", { className: "space-y-2", children: [_jsx("span", { className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium border ${statusStyle.bgColor} ${statusStyle.borderColor} ${statusStyle.textColor}`, children: statusStyle.label }), assignment.class_status && (_jsxs("p", { className: "text-sm text-gray-600", children: ["Class Status: ", assignment.class_status] })), assignment.instructor_response_at && (_jsxs("p", { className: "text-sm text-gray-600", children: ["Response: ", new Date(assignment.instructor_response_at).toLocaleDateString()] }))] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Assignment Type" }), _jsx("p", { className: "text-gray-900 capitalize", children: assignment.schedule_type || 'adhoc' })] })] })] }), _jsxs("div", { className: "mt-6 p-4 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-3", children: "Payment Information" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(IndianRupee, { className: "w-4 h-4 text-green-500" }), _jsxs("p", { className: "text-lg font-semibold text-green-600", children: ["\u20B9", assignment.payment_amount.toFixed(2)] })] }), _jsx("p", { className: "text-sm text-gray-600", children: "Amount" })] }), assignment.payment_status && (_jsxs("div", { children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckSquare, { className: `w-4 h-4 ${assignment.payment_status === 'paid' ? 'text-green-500' :
                                                                        assignment.payment_status === 'pending' ? 'text-yellow-500' :
                                                                            'text-red-500'}` }), _jsx("p", { className: `font-medium capitalize ${assignment.payment_status === 'paid' ? 'text-green-600' :
                                                                        assignment.payment_status === 'pending' ? 'text-yellow-600' :
                                                                            'text-red-600'}`, children: assignment.payment_status })] }), _jsx("p", { className: "text-sm text-gray-600", children: "Status" })] })), assignment.payment_date && (_jsxs("div", { children: [_jsx("p", { className: "font-medium text-gray-900", children: new Date(assignment.payment_date).toLocaleDateString() }), _jsx("p", { className: "text-sm text-gray-600", children: "Payment Date" })] }))] })] }), _jsxs("div", { className: "mt-6 space-y-4", children: [getBookingIds(assignment).length > 0 && (_jsxs("div", { children: [_jsxs("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: ["Booking Reference", getBookingIds(assignment).length > 1 ? 's' : ''] }), _jsx("div", { className: "space-y-1", children: getBookingIds(assignment).map((bookingId, index) => (_jsx("p", { className: "text-gray-900 font-mono text-sm", children: bookingId }, index))) })] })), assignment.notes && (_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Notes" }), _jsx("div", { className: "p-3 bg-yellow-50 border border-yellow-200 rounded-md", children: _jsx("p", { className: "text-gray-900", children: assignment.notes }) })] })), _jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 mb-2", children: "Assignment Details" }), _jsxs("div", { className: "grid grid-cols-2 gap-4 text-sm", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-600", children: "Created:" }), _jsx("p", { className: "text-gray-900", children: new Date(assignment.assigned_at).toLocaleDateString() })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-600", children: "ID:" }), _jsx("p", { className: "text-gray-900 font-mono", children: assignment.id })] })] })] })] })] }), _jsxs("div", { className: "flex justify-end space-x-3 px-6 py-4 border-t border-gray-200", children: [_jsx("button", { onClick: onClose, className: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500", children: "Close" }), onEdit && (_jsx("button", { onClick: () => {
                                        onEdit(assignment);
                                    }, className: "px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500", children: "Edit Assignment" }))] })] }) })] }));
};
