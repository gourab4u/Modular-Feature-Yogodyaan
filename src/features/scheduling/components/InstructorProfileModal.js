import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Calendar, Mail, Phone, User, X } from 'lucide-react';
const InstructorProfileModal = ({ instructor, isOpen, onClose, onViewFullProfile }) => {
    if (!isOpen || !instructor)
        return null;
    const displayName = instructor.fullName || instructor.email;
    return (_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50", children: _jsxs("div", { className: "bg-white rounded-lg max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto", children: [_jsxs("div", { className: "flex justify-between items-center p-6 border-b", children: [_jsx("h2", { className: "text-xl font-semibold", children: "Instructor Profile" }), _jsx("button", { onClick: onClose, className: "text-gray-400 hover:text-gray-600", children: _jsx(X, { size: 24 }) })] }), _jsxs("div", { className: "p-6", children: [_jsx("div", { className: "flex justify-center mb-4", children: instructor.profileImage || instructor.avatar_url ? (_jsx("img", { src: instructor.profileImage || instructor.avatar_url, alt: displayName, className: "w-20 h-20 rounded-full object-cover", onError: (e) => {
                                    e.currentTarget.style.display = 'none';
                                    e.currentTarget.nextElementSibling?.classList.remove('hidden');
                                } })) : (_jsx("div", { className: "w-20 h-20 rounded-full bg-gray-300 flex items-center justify-center", children: _jsx(User, { size: 32, className: "text-gray-600" }) })) }), _jsxs("div", { className: "text-center mb-6", children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: displayName }), instructor.specialization && (_jsx("p", { className: "text-gray-600 mb-2", children: instructor.specialization })), instructor.experience && (_jsxs("p", { className: "text-sm text-gray-500", children: [instructor.experience, " years experience"] }))] }), _jsxs("div", { className: "space-y-3 mb-6", children: [_jsxs("div", { className: "flex items-center", children: [_jsx(Mail, { size: 16, className: "text-gray-400 mr-3" }), _jsx("span", { className: "text-sm", children: instructor.email })] }), instructor.phone && (_jsxs("div", { className: "flex items-center", children: [_jsx(Phone, { size: 16, className: "text-gray-400 mr-3" }), _jsx("span", { className: "text-sm", children: instructor.phone })] })), (instructor.joinDate || instructor.created_at) && (_jsxs("div", { className: "flex items-center", children: [_jsx(Calendar, { size: 16, className: "text-gray-400 mr-3" }), _jsxs("span", { className: "text-sm", children: ["Joined ", new Date(instructor.joinDate || instructor.created_at || '').toLocaleDateString()] })] }))] }), instructor.bio && (_jsxs("div", { className: "mb-6", children: [_jsx("h4", { className: "font-medium mb-2", children: "About" }), _jsx("p", { className: "text-sm text-gray-600 line-clamp-3", children: instructor.bio })] })), _jsxs("div", { className: "flex space-x-3", children: [_jsx("button", { onClick: () => onViewFullProfile(instructor.id), className: "flex-1 bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors", children: "View Full Profile" }), _jsx("button", { onClick: onClose, className: "flex-1 bg-gray-200 text-gray-800 py-2 px-4 rounded hover:bg-gray-300 transition-colors", children: "Close" })] })] })] }) }));
};
export default InstructorProfileModal;
